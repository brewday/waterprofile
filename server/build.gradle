buildscript {
	ext {
		springBootVersion = '1.4.0.M3'
	}
	repositories {
		mavenCentral()
		maven { url "https://repo.spring.io/snapshot" }
		maven { url "https://repo.spring.io/milestone" }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") 
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'spring-boot' 

jar {
	baseName = 'waterprofile'
	version = '1.0.0'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}


dependencies {
	// Tools
	compile('org.springframework.boot:spring-boot-devtools')

	// Mongo
	compile('org.springframework.boot:spring-boot-starter-data-mongodb')

	// Web
	compile('org.springframework.boot:spring-boot-starter-web')
	compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")
	compile("com.fasterxml.jackson.datatype:jackson-datatype-jdk8")
	compile("com.fasterxml.jackson.dataformat:jackson-dataformat-xml")
	compile("org.codehaus.woodstox:woodstox-core-asl:4.4.1")

	// Test
	testCompile('org.springframework.boot:spring-boot-starter-test') 
}

bootRun {
	addResources = true
}

eclipse {
	classpath {
		 containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
		 containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
	}
}

// Heroku
task stage {
	dependsOn build
}